<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Claude" script:language="StarBasic" script:moduleType="normal">Sub GenerarDocumentacionMarkdownMejorada()
    Dim oDoc As Object
    Dim oForms As Object
    Dim sMarkdown As String
    Dim sFilePath As String
    Dim FormulariosProcesados As Object
    
    &apos; Crear diccionario para evitar duplicados
    Set FormulariosProcesados = CreateObject(&quot;Scripting.Dictionary&quot;)
    
    &apos; Obtener el documento actual
    oDoc = ThisDatabaseDocument
    oForms = oDoc.FormDocuments
    
    &apos; Inicializar el contenido Markdown
    sMarkdown = &quot;# Documentación de Formularios - &quot; &amp; oDoc.Title &amp; Chr(10) &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;**Fecha de generación:** &quot; &amp; Format(Now(), &quot;DD/MM/YYYY HH:MM:SS&quot;) &amp; Chr(10) &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;**Total de formularios:** &quot; &amp; oForms.Count &amp; Chr(10) &amp; Chr(10)
    
    &apos; Añadir tabla de referencia de columnas
    sMarkdown = sMarkdown &amp; &quot;## Referencia de columnas de controles&quot; &amp; Chr(10) &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| Columna | Descripción |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;|---------|-------------|&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Nombre control** | Identificador único del control en el formulario |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Tipo control** | Tipo de control (Botón, Campo texto, ListBox, Grid/Tabla, etc.) |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Campo BD** | Campo de la base de datos vinculado al control |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Tabla origen** | Tabla del campo (si es diferente a la tabla del formulario) |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Habilitado** | Indica si el control está activo (Sí/No) |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Solo lectura** | Indica si el control es de solo lectura (Sí/No) |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Requerido** | Indica si el campo es obligatorio (Sí/No) |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Valor por defecto** | Valor inicial que toma el control |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Origen lista** | Para ComboBox/ListBox: consulta SQL que alimenta la lista |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;| **Tipo botón** | Para botones: tipo de acción (Normal/Submit/Reset/URL) |&quot; &amp; Chr(10)
    sMarkdown = sMarkdown &amp; Chr(10)
    sMarkdown = sMarkdown &amp; &quot;---&quot; &amp; Chr(10) &amp; Chr(10)
    
    &apos; Iterar sobre todos los formularios
    Dim i As Integer
    For i = 0 To oForms.Count - 1
        Dim sFormName As String
        sFormName = oForms.getByIndex(i).Name
        
        &apos; Evitar duplicados
        If Not FormulariosProcesados.Exists(sFormName) Then
            FormulariosProcesados.Add sFormName, True
            
            sMarkdown = sMarkdown &amp; &quot;## Formulario: &quot; &amp; sFormName &amp; Chr(10) &amp; Chr(10)
            
            &apos; Obtener información del formulario
            Dim oFormDoc As Object
            oFormDoc = oForms.getByName(sFormName)
            sMarkdown = sMarkdown &amp; DocumentarFormularioMejorado(oFormDoc, sFormName)
            sMarkdown = sMarkdown &amp; &quot;---&quot; &amp; Chr(10) &amp; Chr(10)
        End If
    Next i
    
    &apos; Guardar el archivo Markdown
    sFilePath = ObtenerRutaGuardado()
    If sFilePath &lt;&gt; &quot;&quot; Then
        GuardarArchivoTexto(sFilePath, sMarkdown)
        MsgBox &quot;Documentación generada exitosamente en:&quot; &amp; Chr(10) &amp; sFilePath, 64, &quot;Éxito&quot;
    End If
End Sub

Function DocumentarFormularioMejorado(oFormDoc As Object, sFormName As String) As String
    Dim sResult As String
    Dim oComponent As Object
    Dim oDrawPage As Object
    Dim oForm As Object
    Dim sTabla As String
    Dim sDataSource As String
    Dim sTipoComando As String
    Dim bPermiteNuevos As Boolean
    Dim bPermiteModificar As Boolean
    Dim bPermiteEliminar As Boolean
    
    On Error Resume Next
    
    &apos; Abrir el documento
    oComponent = oFormDoc.open()
    
    If Not IsNull(oComponent) Then
        oDrawPage = oComponent.getDrawPage()
        
        &apos; Obtener el formulario principal
        If oDrawPage.getForms().getCount() &gt; 0 Then
            oForm = oDrawPage.getForms().getByIndex(0)
            
            &apos; Información de la tabla asociada
            sTabla = &quot;&quot;
            On Error Resume Next
            &apos; Intentar obtener el Command del formulario
            If Not IsNull(oForm) Then
                sTabla = oForm.Command
            End If
            
            &apos; Si está vacío, intentar desde CommandType
            If sTabla = &quot;&quot; Or IsNull(sTabla) Then
                &apos; Verificar si hay DataSource configurado
                sDataSource = oForm.DataSourceName
                If sDataSource &lt;&gt; &quot;&quot; Then
                    sTabla = oForm.Command
                End If
            End If
            
            If sTabla = &quot;&quot; Or IsNull(sTabla) Then
                sTabla = &quot;(No especificada)&quot;
            End If
            On Error GoTo 0
            
            sResult = sResult &amp; &quot;**Tabla/Consulta asociada:** `&quot; &amp; sTabla &amp; &quot;`&quot; &amp; Chr(10) &amp; Chr(10)
            
            &apos; Tipo de comando
            On Error Resume Next
            Select Case oForm.CommandType
                Case 0: sTipoComando = &quot;Tabla&quot;
                Case 1: sTipoComando = &quot;Consulta&quot;
                Case 2: sTipoComando = &quot;SQL&quot;
                Case Else: sTipoComando = &quot;Desconocido&quot;
            End Select
            On Error GoTo 0
            
            sResult = sResult &amp; &quot;**Tipo de comando:** &quot; &amp; sTipoComando &amp; Chr(10) &amp; Chr(10)
            
            &apos; Propiedades adicionales del formulario
            On Error Resume Next
            bPermiteNuevos = oForm.AllowInserts
            bPermiteModificar = oForm.AllowUpdates
            bPermiteEliminar = oForm.AllowDeletes
            On Error GoTo 0
            
            sResult = sResult &amp; &quot;**Propiedades:**&quot; &amp; Chr(10)
            sResult = sResult &amp; &quot;- Permite nuevos registros: &quot; &amp; IIf(bPermiteNuevos, &quot;Sí&quot;, &quot;No&quot;) &amp; Chr(10)
            sResult = sResult &amp; &quot;- Permite modificaciones: &quot; &amp; IIf(bPermiteModificar, &quot;Sí&quot;, &quot;No&quot;) &amp; Chr(10)
            sResult = sResult &amp; &quot;- Permite eliminaciones: &quot; &amp; IIf(bPermiteEliminar, &quot;Sí&quot;, &quot;No&quot;) &amp; Chr(10) &amp; Chr(10)
            
            &apos; Listar controles con información detallada
            sResult = sResult &amp; &quot;### Controles del formulario&quot; &amp; Chr(10) &amp; Chr(10)
            sResult = sResult &amp; &quot;| Nombre control | Tipo control | Campo BD | Tabla origen | Habilitado | Solo lectura | Requerido | Valor por defecto | Origen lista | Tipo botón |&quot; &amp; Chr(10)
            sResult = sResult &amp; &quot;|----------------|--------------|----------|--------------|------------|--------------|-----------|-------------------|--------------|------------|&quot; &amp; Chr(10)
            
            &apos; Declarar variables para el bucle
            Dim oShape As Object
            Dim oModel As Object
            Dim sNombreControl As String
            Dim sTipo As String
            Dim sCampo As String
            Dim sTempCampo As String
            Dim sOrigenControl As String
            Dim oBoundField As Object
            Dim bHabilitado As String
            Dim bSoloLectura As String
            Dim bRequerido As String
            Dim sValorDefecto As String
            Dim sOrigenLista As String
            Dim sTipoBoton As String
            
            &apos; Iterar sobre los shapes
            Dim j As Integer
            For j = 0 To oDrawPage.getCount() - 1
                oShape = oDrawPage.getByIndex(j)
                
                If oShape.supportsService(&quot;com.sun.star.drawing.ControlShape&quot;) Then
                    oModel = oShape.getControl()
                    
                    &apos; Inicializar todas las variables al principio de cada iteración
                    sNombreControl = &quot;&quot;
                    sTipo = &quot;&quot;
                    sCampo = &quot;N/A&quot;
                    sTempCampo = &quot;&quot;
                    sOrigenControl = &quot;N/A&quot;
                    Set oBoundField = Nothing
                    bHabilitado = &quot;N/A&quot;
                    bSoloLectura = &quot;N/A&quot;
                    bRequerido = &quot;N/A&quot;
                    sValorDefecto = &quot;N/A&quot;
                    sOrigenLista = &quot;N/A&quot;
                    sTipoBoton = &quot;N/A&quot;
                    
                    &apos; Nombre del control
                    On Error Resume Next
                    sNombreControl = oModel.Name
                    On Error GoTo 0
                    
                    &apos; Tipo de control
                    sTipo = ObtenerTipoControlDetallado(oModel)
                    
                    &apos; Campo asociado
                    sCampo = &quot;N/A&quot;
                    On Error Resume Next
                    If HasProperty(oModel, &quot;DataField&quot;) Then
                        &apos;Dim sTempCampo As String
                        sTempCampo = oModel.DataField
                        If sTempCampo &lt;&gt; &quot;&quot; Then
                            sCampo = sTempCampo
                        End If
                    End If
                    On Error GoTo 0
                    
                    &apos; Tabla origen (si es diferente a la del formulario)
                    sOrigenControl = &quot;N/A&quot;
                    On Error Resume Next
                    Set oBoundField = oModel.BoundField
                    If Not IsNull(oBoundField) Then
                        sOrigenControl = oBoundField.TableName
                        If sOrigenControl = sTabla Or sOrigenControl = &quot;&quot; Then
                            sOrigenControl = &quot;N/A&quot;
                        End If
                    End If
                    On Error GoTo 0
                    
                    &apos; Habilitado
                    On Error Resume Next
                    If oModel.Enabled Then
                        bHabilitado = &quot;Sí&quot;
                    Else
                        bHabilitado = &quot;No&quot;
                    End If
                    If Err.Number &lt;&gt; 0 Then bHabilitado = &quot;N/A&quot;
                    On Error GoTo 0
                    
                    &apos; Solo lectura
                    On Error Resume Next
                    If oModel.ReadOnly Then
                        bSoloLectura = &quot;Sí&quot;
                    Else
                        bSoloLectura = &quot;No&quot;
                    End If
                    If Err.Number &lt;&gt; 0 Then bSoloLectura = &quot;N/A&quot;
                    On Error GoTo 0
                    
                    &apos; Requerido
                    On Error Resume Next
                    If HasProperty(oModel, &quot;IsNullable&quot;) Then
                        If Not oModel.IsNullable Then
                            bRequerido = &quot;Sí&quot;
                        Else
                            bRequerido = &quot;No&quot;
                        End If
                    Else
                        bRequerido = &quot;N/A&quot;
                    End If
                    On Error GoTo 0
                    
                    &apos; Valor por defecto
                    On Error Resume Next
                    sValorDefecto = &quot;&quot;
                    If HasProperty(oModel, &quot;DefaultText&quot;) Then
                        sValorDefecto = oModel.DefaultText
                    ElseIf HasProperty(oModel, &quot;DefaultValue&quot;) Then
                        sValorDefecto = CStr(oModel.DefaultValue)
                    ElseIf HasProperty(oModel, &quot;DefaultDate&quot;) Then
                        sValorDefecto = CStr(oModel.DefaultDate)
                    End If
                    If sValorDefecto = &quot;&quot; Then sValorDefecto = &quot;N/A&quot;
                    On Error GoTo 0
                    
                    &apos; Origen lista (para ComboBox y ListBox)
                    sOrigenLista = &quot;N/A&quot;
                    If sTipo = &quot;ComboBox&quot; Or sTipo = &quot;ListBox&quot; Then
                        On Error Resume Next
                        Dim sListSource As String
                        sListSource = &quot;&quot;
                        If IsArray(oModel.ListSource) Then
                            If UBound(oModel.ListSource) &gt;= 0 Then
                                sListSource = oModel.ListSource(0)
                            End If
                        Else
                            sListSource = oModel.ListSource
                        End If
                        If sListSource &lt;&gt; &quot;&quot; Then
                            &apos; Mostrar el SQL completo (sin truncar)
                            sOrigenLista = sListSource                           
                        End If
                        On Error GoTo 0
                    End If
                    
                    &apos; Tipo de botón
                    sTipoBoton = &quot;N/A&quot;
                    If sTipo = &quot;Botón&quot; Then
                        On Error Resume Next
                        Select Case oModel.ButtonType
                            Case 0: sTipoBoton = &quot;Normal&quot;
                            Case 1: sTipoBoton = &quot;Submit&quot;
                            Case 2: sTipoBoton = &quot;Reset&quot;
                            Case 3: sTipoBoton = &quot;URL&quot;
                        End Select
                        On Error GoTo 0
                    End If
                    
                    &apos; Agregar fila a la tabla
                    sResult = sResult &amp; &quot;| &quot; &amp; sNombreControl &amp; &quot; | &quot; &amp; sTipo &amp; &quot; | `&quot; &amp; sCampo &amp; &quot;` | &quot; &amp; sOrigenControl &amp; &quot; | &quot; &amp; bHabilitado &amp; &quot; | &quot; &amp; bSoloLectura &amp; &quot; | &quot; &amp; bRequerido &amp; &quot; | &quot; &amp; sValorDefecto &amp; &quot; | &quot; &amp; EscaparMarkdown(sOrigenLista) &amp; &quot; | &quot; &amp; sTipoBoton &amp; &quot; |&quot; &amp; Chr(10)
                End If
            Next j
            
            sResult = sResult &amp; Chr(10)
            
            &apos; Documentar subformularios si existen
            sResult = sResult &amp; DocumentarSubformularios(oDrawPage)
            
            &apos; Documentar eventos y macros
            sResult = sResult &amp; DocumentarEventosMejorado(oForm, oDrawPage)
        Else
            sResult = sResult &amp; &quot;*El formulario no contiene controles o no se pudo acceder a ellos.*&quot; &amp; Chr(10) &amp; Chr(10)
        End If
        
        &apos; Cerrar el formulario después de documentarlo
        On Error Resume Next
        If Not IsNull(oComponent) Then
            &apos; Cerrar la ventana si está abierta
            Dim oFrame As Object
            oFrame = oComponent.getCurrentController().getFrame()
            If Not IsNull(oFrame) Then
                oFrame.close(True)
            End If
            &apos; Descargar el documento embebido
            oComponent.dispose()
        End If
    On Error GoTo 0
    Else
        sResult = sResult &amp; &quot;*No se pudo abrir el formulario para inspección.*&quot; &amp; Chr(10) &amp; Chr(10)
    End If
    
    DocumentarFormularioMejorado = sResult
End Function

Function ObtenerTipoControlDetallado(oModel As Object) As String
    Dim sTipo As String
    
    On Error Resume Next
    
    If oModel.supportsService(&quot;com.sun.star.form.component.TextField&quot;) Then
        sTipo = &quot;Campo texto&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.ComboBox&quot;) Then
        sTipo = &quot;ComboBox&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.ListBox&quot;) Then
        sTipo = &quot;ListBox&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.CheckBox&quot;) Then
        sTipo = &quot;CheckBox&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.DateField&quot;) Then
        sTipo = &quot;Campo fecha&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.TimeField&quot;) Then
        sTipo = &quot;Campo hora&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.NumericField&quot;) Then
        sTipo = &quot;Campo numérico&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.CommandButton&quot;) Then
        sTipo = &quot;Botón&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.RadioButton&quot;) Then
        sTipo = &quot;RadioButton&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.FormattedField&quot;) Then
        sTipo = &quot;Campo formateado&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.GridControl&quot;) Then
        sTipo = &quot;Grid/Tabla&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.ImageControl&quot;) Then
        sTipo = &quot;Control imagen&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.FileControl&quot;) Then
        sTipo = &quot;Selector archivo&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.awt.UnoControlFixedTextModel&quot;) Then
        sTipo = &quot;Etiqueta&quot;
    ElseIf oModel.supportsService(&quot;com.sun.star.form.component.GroupBox&quot;) Then
        sTipo = &quot;Grupo&quot;
    Else
        &apos; Intentar obtener el nombre del servicio
        Dim sServiceName As String
        sServiceName = &quot;&quot;
        If Not IsNull(oModel) Then
            Dim aServices As Variant
            aServices = oModel.getSupportedServiceNames()
            If UBound(aServices) &gt;= 0 Then
                sServiceName = aServices(0)
                sServiceName = Replace(sServiceName, &quot;com.sun.star.form.component.&quot;, &quot;&quot;)
                sServiceName = Replace(sServiceName, &quot;com.sun.star.awt.&quot;, &quot;&quot;)
            End If
        End If
        sTipo = &quot;Otro (&quot; &amp; sServiceName &amp; &quot;)&quot;
    End If
    
    On Error GoTo 0
    
    ObtenerTipoControlDetallado = sTipo
End Function

Function DocumentarSubformularios(oDrawPage As Object) As String
    Dim sResult As String
    Dim oForms As Object
    Dim i As Integer
    Dim oSubForm As Object
    Dim sNombreSubForm As String
    Dim sTablaSubForm As String
    Dim aMasterFields As Variant
    Dim aDetailFields As Variant
    Dim j As Integer
    
    sResult = &quot;&quot;
    oForms = oDrawPage.getForms()
    
    If oForms.getCount() &gt; 1 Then
        sResult = &quot;### Subformularios&quot; &amp; Chr(10) &amp; Chr(10)
        
        For i = 1 To oForms.getCount() - 1
            oSubForm = oForms.getByIndex(i)
            
            On Error Resume Next
            sNombreSubForm = oSubForm.Name
            sTablaSubForm = oSubForm.Command
            On Error GoTo 0
            
            sResult = sResult &amp; &quot;**&quot; &amp; sNombreSubForm &amp; &quot;**&quot; &amp; Chr(10)
            sResult = sResult &amp; &quot;- Tabla/Consulta: `&quot; &amp; sTablaSubForm &amp; &quot;`&quot; &amp; Chr(10)
            
            &apos; Relación maestro-detalle
            On Error Resume Next
            aMasterFields = oSubForm.MasterFields
            aDetailFields = oSubForm.DetailFields
            
            If IsArray(aMasterFields) And IsArray(aDetailFields) Then
                If UBound(aMasterFields) &gt;= 0 Then
                    sResult = sResult &amp; &quot;- Relación: &quot;
                    For j = 0 To UBound(aMasterFields)
                        If j &gt; 0 Then sResult = sResult &amp; &quot;, &quot;
                        sResult = sResult &amp; &quot;`&quot; &amp; aMasterFields(j) &amp; &quot;` → `&quot; &amp; aDetailFields(j) &amp; &quot;`&quot;
                    Next j
                    sResult = sResult &amp; Chr(10)
                End If
            End If
            On Error GoTo 0
            
            sResult = sResult &amp; Chr(10)
        Next i
    End If
    
    DocumentarSubformularios = sResult
End Function

Function DocumentarEventosMejorado(oForm As Object, oDrawPage As Object) As String
    Dim sResult As String
    Dim bHayEventos As Boolean
    Dim oFormEvents As Object
    Dim eventNames As Variant
    Dim i As Integer
    Dim oEvent As Object
    Dim sEventType As String
    Dim sScript As String
    Dim sNombreEvento As String
    Dim j As Integer
    Dim bPrimeraVez As Boolean
    Dim oShape As Object
    Dim oModel As Object
    Dim oCtrlEvents As Object
    Dim ctrlEventNames As Variant
    Dim k As Integer
    Dim oCtrlEvent As Object
    Dim sCtrlScript As String
    Dim sCtrlName As String
    Dim sCtrlEventName As String
    
    sResult = &quot;### Eventos y macros&quot; &amp; Chr(10) &amp; Chr(10)
    bHayEventos = False
    
    &apos; Eventos del formulario
    On Error Resume Next
    oFormEvents = oForm.Events
    
    If Not IsNull(oFormEvents) Then
        eventNames = oFormEvents.getElementNames()
        
        If IsArray(eventNames) Then
            If UBound(eventNames) &gt;= 0 Then
                For i = 0 To UBound(eventNames)
                    oEvent = oFormEvents.getByName(eventNames(i))
                    
                    If Not IsNull(oEvent) Then
                        sEventType = oEvent.EventType
                        sScript = &quot;&quot;
                        
                        If sEventType = &quot;Script&quot; Or sEventType = &quot;StarBasic&quot; Then
                            sScript = oEvent.Script
                            If sScript = &quot;&quot; Then sScript = oEvent.ScriptCode
                        End If
                        
                        If sScript &lt;&gt; &quot;&quot; Then
                            If Not bHayEventos Then
                                sResult = sResult &amp; &quot;**Eventos del formulario:**&quot; &amp; Chr(10) &amp; Chr(10)
                                bHayEventos = True
                            End If
                            
                            sNombreEvento = FormatearNombreEvento(eventNames(i))
                            sResult = sResult &amp; &quot;- **&quot; &amp; sNombreEvento &amp; &quot;**: `&quot; &amp; sScript &amp; &quot;`&quot; &amp; Chr(10)
                        End If
                    End If
                Next i
                
                If bHayEventos Then sResult = sResult &amp; Chr(10)
            End If
        End If
    End If
    On Error GoTo 0
    
    &apos; Eventos de controles
    bPrimeraVez = True
    
    For j = 0 To oDrawPage.getCount() - 1
        On Error Resume Next
        oShape = oDrawPage.getByIndex(j)
        
        If oShape.supportsService(&quot;com.sun.star.drawing.ControlShape&quot;) Then
            oModel = oShape.getControl()
            oCtrlEvents = oModel.Events
            
            If Not IsNull(oCtrlEvents) Then
                ctrlEventNames = oCtrlEvents.getElementNames()
                
                If IsArray(ctrlEventNames) Then
                    For k = 0 To UBound(ctrlEventNames)
                        oCtrlEvent = oCtrlEvents.getByName(ctrlEventNames(k))
                        
                        If Not IsNull(oCtrlEvent) Then
                            sCtrlScript = oCtrlEvent.Script
                            If sCtrlScript = &quot;&quot; Then sCtrlScript = oCtrlEvent.ScriptCode
                            
                            If sCtrlScript &lt;&gt; &quot;&quot; Then
                                If bPrimeraVez Then
                                    sResult = sResult &amp; &quot;**Eventos de controles:**&quot; &amp; Chr(10) &amp; Chr(10)
                                    bPrimeraVez = False
                                    bHayEventos = True
                                End If
                                
                                sCtrlName = oModel.Name
                                sCtrlEventName = FormatearNombreEvento(ctrlEventNames(k))
                                
                                sResult = sResult &amp; &quot;- **&quot; &amp; sCtrlName &amp; &quot;.&quot; &amp; sCtrlEventName &amp; &quot;**: `&quot; &amp; sCtrlScript &amp; &quot;`&quot; &amp; Chr(10)
                            End If
                        End If
                    Next k
                End If
            End If
        End If
        On Error GoTo 0
    Next j
    
    If Not bHayEventos Then
        sResult = sResult &amp; &quot;*No hay eventos ni macros asociadas.*&quot; &amp; Chr(10)
    End If
    
    sResult = sResult &amp; Chr(10)
    
    DocumentarEventosMejorado = sResult
End Function

Function FormatearNombreEvento(sEvento As String) As String
    &apos; Convertir nombres técnicos a más legibles
    sEvento = Replace(sEvento, &quot;approveAction&quot;, &quot;Al aprobar acción&quot;)
    sEvento = Replace(sEvento, &quot;actionPerformed&quot;, &quot;Al hacer clic&quot;)
    sEvento = Replace(sEvento, &quot;itemStateChanged&quot;, &quot;Al cambiar selección&quot;)
    sEvento = Replace(sEvento, &quot;textChanged&quot;, &quot;Al cambiar texto&quot;)
    sEvento = Replace(sEvento, &quot;focusGained&quot;, &quot;Al obtener foco&quot;)
    sEvento = Replace(sEvento, &quot;focusLost&quot;, &quot;Al perder foco&quot;)
    sEvento = Replace(sEvento, &quot;mouseEntered&quot;, &quot;Al entrar ratón&quot;)
    sEvento = Replace(sEvento, &quot;mouseExited&quot;, &quot;Al salir ratón&quot;)
    sEvento = Replace(sEvento, &quot;approveUpdate&quot;, &quot;Al aprobar actualización&quot;)
    sEvento = Replace(sEvento, &quot;approveReset&quot;, &quot;Al aprobar reset&quot;)
    
    FormatearNombreEvento = sEvento
End Function

Function EscaparMarkdown(sTexto As String) As String
    sTexto = Replace(sTexto, &quot;|&quot;, &quot;\|&quot;)
    sTexto = Replace(sTexto, &quot;[&quot;, &quot;\[&quot;)
    sTexto = Replace(sTexto, &quot;]&quot;, &quot;\]&quot;)
    EscaparMarkdown = sTexto
End Function

Function ObtenerRutaGuardado() As String
    Dim oDoc As Object
    Dim sRutaODB As String
    Dim sRutaDirectorio As String
    Dim sNombreODB As String
    Dim sNombreArchivo As String
    
    On Error Resume Next
    
    &apos; Obtener el documento actual y su ruta
    oDoc = ThisDatabaseDocument
    sRutaODB = ConvertFromURL(oDoc.getURL())
    
    &apos; Extraer directorio y nombre del archivo sin extensión
    sRutaDirectorio = Left(sRutaODB, InStrRev(sRutaODB, &quot;\&quot;))
    sNombreODB = Mid(sRutaODB, InStrRev(sRutaODB, &quot;\&quot;) + 1)
    sNombreODB = Left(sNombreODB, InStrRev(sNombreODB, &quot;.&quot;) - 1)
    sNombreArchivo = &quot;formularios_&quot; &amp; sNombreODB &amp; &quot;.md&quot;
    
    On Error GoTo 0
    
    ObtenerRutaGuardado = sRutaDirectorio &amp; sNombreArchivo
End Function

Function GetPathSettings() As Object
    GetPathSettings = CreateUnoService(&quot;com.sun.star.util.PathSettings&quot;)
End Function

Sub GuardarArchivoTexto(sRuta As String, sContenido As String)
    Dim iFileNumber As Integer
    
    iFileNumber = FreeFile
    Open sRuta For Output As #iFileNumber
    Print #iFileNumber, sContenido
    Close #iFileNumber
End Sub
</script:module>